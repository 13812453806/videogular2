"use strict";
var vg_media_1 = require("../vg-media/vg-media");
var vg_api_1 = require("../services/vg-api");
var vg_states_1 = require("../states/vg-states");
describe('Videogular Media', function () {
    var media;
    var ref;
    var api;
    var elem = {
        play: function () { },
        pause: function () { },
        load: function () { },
        duration: 100,
        currentTime: 0,
        volume: 1,
        playbackRate: 1,
        buffered: {
            length: 2,
            end: function () { return 50; }
        },
        id: 'testVideo',
        observe: function () {
            return {};
        },
        dispatchEvent: function () { }
    };
    beforeEach(function () {
        ref = {
            nativeElement: elem
        };
        api = new vg_api_1.VgAPI();
        media = new vg_media_1.VgMedia(ref);
    });
    it('Should load a new media if a change on dom have been happened', function () {
        jasmine.clock().install();
        spyOn(elem, 'load').and.callThrough();
        spyOn(elem, 'pause').and.callThrough();
        media.onMutation({});
        jasmine.clock().tick(10);
        expect(elem.load).toHaveBeenCalled();
        expect(elem.pause).toHaveBeenCalled();
        expect(elem.currentTime).toBe(0);
        jasmine.clock().uninstall();
    });
    it('Should not be master by default', function () {
        expect(media.isMaster).toBe(false);
    });
    it('Should have a play method', function () {
        spyOn(elem, 'play');
        media.play();
        expect(elem.play).toHaveBeenCalled();
    });
    it('Should have a pause method', function () {
        spyOn(elem, 'pause');
        media.pause();
        expect(elem.pause).toHaveBeenCalled();
    });
    it('Should have setter/getter props', function () {
        expect(media.duration).toBe(100);
        expect(media.currentTime).toBe(0);
        expect(media.volume).toBe(1);
        expect(media.playbackRate).toBe(1);
        expect(media.buffered.length).toEqual(2);
        media.currentTime = 50;
        media.volume = 0.5;
        media.playbackRate = 0.5;
        expect(elem.currentTime).toBe(50);
        expect(elem.volume).toBe(0.5);
        expect(elem.playbackRate).toBe(0.5);
    });
    it('Should handle onCanPlay native event', function () {
        expect(media.canPlay).toBeFalsy();
        media.onCanPlay({});
        expect(media.canPlay).toBeTruthy();
    });
    it('Should handle onCanPlayThrough native event', function () {
        expect(media.canPlayThrough).toBeFalsy();
        media.onCanPlayThrough({});
        expect(media.canPlayThrough).toBeTruthy();
    });
    it('Should handle onLoadMetadata native event', function () {
        expect(media.isMetadataLoaded).toBeFalsy();
        media.onLoadMetadata({});
        expect(media.isMetadataLoaded).toBeTruthy();
        expect(media.time.total).toBe(100000);
    });
    it('Should handle onWait native event', function () {
        expect(media.isWaiting).toBeFalsy();
        media.onWait({});
        expect(media.isWaiting).toBeTruthy();
    });
    it('Should handle onComplete native event', function () {
        expect(media.isCompleted).toBeFalsy();
        media.state = vg_states_1.VgStates.VG_PLAYING;
        media.onComplete({});
        expect(media.isCompleted).toBeTruthy();
        expect(media.state).toBe(vg_states_1.VgStates.VG_ENDED);
    });
    it('Should handle onStartPlaying native event', function () {
        expect(media.state).toBe(vg_states_1.VgStates.VG_PAUSED);
        media.onStartPlaying({});
        expect(media.state).toBe(vg_states_1.VgStates.VG_PLAYING);
    });
    it('Should handle onPlay native event', function () {
        expect(media.state).toBe(vg_states_1.VgStates.VG_PAUSED);
        media.onPlay({});
        expect(media.state).toBe(vg_states_1.VgStates.VG_PLAYING);
    });
    it('Should handle onPause native event', function () {
        media.state = vg_states_1.VgStates.VG_PLAYING;
        media.onPause({});
        expect(media.state).toBe(vg_states_1.VgStates.VG_PAUSED);
    });
    it('Should handle onTimeUpdate native event (with buffer)', function () {
        elem.currentTime = 25;
        media.onTimeUpdate({});
        expect(media.time.current).toBe(25000);
        expect(media.time.left).toBe(75000);
        expect(media.buffer.end).toBe(50000);
    });
    it('Should handle onTimeUpdate native event (without buffer)', function () {
        elem.currentTime = 25;
        elem.buffered = {
            length: 0,
            end: function () { return 0; }
        };
        media.onTimeUpdate({});
        expect(media.time.current).toBe(25000);
        expect(media.time.left).toBe(75000);
        expect(media.buffer.end).toBe(0);
        elem.buffered = {
            length: 2,
            end: function () { return 50; }
        };
    });
    it('Should handle onProgress native event (with buffer)', function () {
        media.onProgress({});
        expect(media.buffer.end).toBe(50000);
    });
    it('Should handle onProgress native event (without buffer)', function () {
        elem.buffered = {
            length: 0,
            end: function () { return 0; }
        };
        media.onProgress({});
        expect(media.buffer.end).toBe(0);
        elem.buffered = {
            length: 2,
            end: function () { return 50; }
        };
    });
});
//# sourceMappingURL=data:application/json;base64,